State 107 conflicts: 16 shift/reduce
State 127 conflicts: 1 shift/reduce
State 129 conflicts: 16 shift/reduce
State 140 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: sentences

    2 sentences: sentence sentences
    3          | sentence

    4 sentence: variabledeclaration
    5         | functionprototype
    6         | functiondefinition

    7 variabledeclaration: TYPE listidentifiers SEMI

    8 listidentifiers: declaration COMMA listidentifiers
    9                | declaration

   10 declaration: IDENT LBRACKET INTCONST RBRACKET
   11            | IDENT

   12 functionprototype: functiondeclaration SEMI

   13 functiondeclaration: TYPE IDENT LPAR formallistparameters RPAR
   14                    | TYPE IDENT LPAR RPAR

   15 formallistparameters: formalparameter COMMA formallistparameters
   16                     | formalparameter

   17 formalparameter: TYPE IDENT
   18                | TYPE IDENT LBRACKET RBRACKET

   19 functiondefinition: functiondeclaration LBRACE body RBRACE
   20                   | functiondeclaration LBRACE RBRACE

   21 body: declorstat body
   22     | declorstat

   23 declorstat: variabledeclaration
   24           | statement
   25           | statementblock

   26 statementblock: LBRACE liststatement RBRACE
   27               | LBRACE RBRACE

   28 liststatement: statement liststatement
   29              | statement

   30 statement: keywords SEMI
   31          | RETURN expression SEMI
   32          | expression SEMI
   33          | ifstatement
   34          | forstatement
   35          | whilestatement
   36          | dowhilestatement

   37 keywords: BREAK
   38         | CONTINUE

   39 ifstatement: IF LPAR expression RPAR statementorblock ELSE statementorblock
   40            | IF LPAR expression RPAR statementorblock

   41 statementorblock: statement
   42                 | statementblock

   43 forstatement: FOR LPAR optionalexpression SEMI optionalexpression SEMI optionalexpression RPAR statementorblock

   44 optionalexpression: expression
   45                   | %empty

   46 whilepart: WHILE LPAR expression RPAR

   47 whilestatement: whilepart statementorblock SEMI

   48 dowhilestatement: DO statementorblock whilepart SEMI

   49 lvalue: IDENT optionbrack

   50 optionbrack: LBRACKET expression RBRACKET
   51            | %empty

   52 expression: constant
   53           | IDENT
   54           | AMP IDENT
   55           | IDENT LBRACKET expression RBRACKET
   56           | IDENT LPAR RPAR
   57           | IDENT LPAR expressionlist RPAR
   58           | lvalue incrdecr
   59           | incrdecr lvalue
   60           | lvalue ASSIGN expression
   61           | unaryop expression
   62           | expression binaryop expression
   63           | expression QUEST expression COLON expression
   64           | LPAR TYPE RPAR expression
   65           | LPAR expression RPAR

   66 expressionlist: expression COMMA expressionlist
   67               | expression

   68 incrdecr: INCR
   69         | DECR

   70 unaryop: MINUS
   71        | BANG
   72        | TILDE

   73 binaryop: EQUALS
   74         | NEQUAL
   75         | GE
   76         | GT
   77         | LE
   78         | LT
   79         | PLUS
   80         | MINUS
   81         | STAR
   82         | SLASH
   83         | MOD
   84         | PIPE
   85         | AMP
   86         | DPIPE
   87         | DAMP

   88 constant: INTCONST
   89         | REALCONST
   90         | STRCONST
   91         | CHARCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 7 13 14 17 18 64
FOR (259) 43
WHILE (260) 46
DO (261) 48
IF (262) 39 40
NOTELSE (263)
ELSE (264) 39
BREAK (265) 37
CONTINUE (266) 38
RETURN (267) 31
IDENT (268) 10 11 13 14 17 18 49 53 54 55 56 57
INTCONST (269) 10 88
REALCONST (270) 89
STRCONST (271) 90
CHARCONST (272) 91
LBRACE (273) 19 20 26 27
RBRACE (274) 19 20 26 27
SEMI (275) 7 12 30 31 32 43 47 48
QUEST (276) 63
COLON (277) 63
COMMA (278) 8 15 66
ASSIGN (279) 60
QUESTCOLON (280)
DPIPE (281) 86
DAMP (282) 87
PIPE (283) 84
AMP (284) 54 85
EQUALS (285) 73
NEQUAL (286) 74
GT (287) 76
GE (288) 75
LT (289) 78
LE (290) 77
PLUS (291) 79
MINUS (292) 70 80
STAR (293) 81
SLASH (294) 82
MOD (295) 83
BANG (296) 71
TILDE (297) 72
DECR (298) 69
INCR (299) 68
UMINUS (300)
UAMP (301)
LPAR (302) 13 14 39 40 43 46 56 57 64 65
RPAR (303) 13 14 39 40 43 46 56 57 64 65
LBRACKET (304) 10 18 50 55
RBRACKET (305) 10 18 50 55


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
sentences (53)
    on left: 2 3, on right: 1 2
sentence (54)
    on left: 4 5 6, on right: 2 3
variabledeclaration (55)
    on left: 7, on right: 4 23
listidentifiers (56)
    on left: 8 9, on right: 7 8
declaration (57)
    on left: 10 11, on right: 8 9
functionprototype (58)
    on left: 12, on right: 5
functiondeclaration (59)
    on left: 13 14, on right: 12 19 20
formallistparameters (60)
    on left: 15 16, on right: 13 15
formalparameter (61)
    on left: 17 18, on right: 15 16
functiondefinition (62)
    on left: 19 20, on right: 6
body (63)
    on left: 21 22, on right: 19 21
declorstat (64)
    on left: 23 24 25, on right: 21 22
statementblock (65)
    on left: 26 27, on right: 25 42
liststatement (66)
    on left: 28 29, on right: 26 28
statement (67)
    on left: 30 31 32 33 34 35 36, on right: 24 28 29 41
keywords (68)
    on left: 37 38, on right: 30
ifstatement (69)
    on left: 39 40, on right: 33
statementorblock (70)
    on left: 41 42, on right: 39 40 43 47 48
forstatement (71)
    on left: 43, on right: 34
optionalexpression (72)
    on left: 44 45, on right: 43
whilepart (73)
    on left: 46, on right: 47 48
whilestatement (74)
    on left: 47, on right: 35
dowhilestatement (75)
    on left: 48, on right: 36
lvalue (76)
    on left: 49, on right: 58 59 60
optionbrack (77)
    on left: 50 51, on right: 49
expression (78)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65, on right: 31
    32 39 40 44 46 50 55 60 61 62 63 64 65 66 67
expressionlist (79)
    on left: 66 67, on right: 57 66
incrdecr (80)
    on left: 68 69, on right: 58 59
unaryop (81)
    on left: 70 71 72, on right: 61
binaryop (82)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87, on right:
    62
constant (83)
    on left: 88 89 90 91, on right: 52


State 0

    0 $accept: . program $end

    TYPE  shift, and go to state 1

    program              go to state 2
    sentences            go to state 3
    sentence             go to state 4
    variabledeclaration  go to state 5
    functionprototype    go to state 6
    functiondeclaration  go to state 7
    functiondefinition   go to state 8


State 1

    7 variabledeclaration: TYPE . listidentifiers SEMI
   13 functiondeclaration: TYPE . IDENT LPAR formallistparameters RPAR
   14                    | TYPE . IDENT LPAR RPAR

    IDENT  shift, and go to state 9

    listidentifiers  go to state 10
    declaration      go to state 11


State 2

    0 $accept: program . $end

    $end  shift, and go to state 12


State 3

    1 program: sentences .

    $default  reduce using rule 1 (program)


State 4

    2 sentences: sentence . sentences
    3          | sentence .

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (sentences)

    sentences            go to state 13
    sentence             go to state 4
    variabledeclaration  go to state 5
    functionprototype    go to state 6
    functiondeclaration  go to state 7
    functiondefinition   go to state 8


State 5

    4 sentence: variabledeclaration .

    $default  reduce using rule 4 (sentence)


State 6

    5 sentence: functionprototype .

    $default  reduce using rule 5 (sentence)


State 7

   12 functionprototype: functiondeclaration . SEMI
   19 functiondefinition: functiondeclaration . LBRACE body RBRACE
   20                   | functiondeclaration . LBRACE RBRACE

    LBRACE  shift, and go to state 14
    SEMI    shift, and go to state 15


State 8

    6 sentence: functiondefinition .

    $default  reduce using rule 6 (sentence)


State 9

   10 declaration: IDENT . LBRACKET INTCONST RBRACKET
   11            | IDENT .
   13 functiondeclaration: TYPE IDENT . LPAR formallistparameters RPAR
   14                    | TYPE IDENT . LPAR RPAR

    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17

    $default  reduce using rule 11 (declaration)


State 10

    7 variabledeclaration: TYPE listidentifiers . SEMI

    SEMI  shift, and go to state 18


State 11

    8 listidentifiers: declaration . COMMA listidentifiers
    9                | declaration .

    COMMA  shift, and go to state 19

    $default  reduce using rule 9 (listidentifiers)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 sentences: sentence sentences .

    $default  reduce using rule 2 (sentences)


State 14

   19 functiondefinition: functiondeclaration LBRACE . body RBRACE
   20                   | functiondeclaration LBRACE . RBRACE

    TYPE       shift, and go to state 20
    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    RBRACE     shift, and go to state 34
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    variabledeclaration  go to state 42
    body                 go to state 43
    declorstat           go to state 44
    statementblock       go to state 45
    statement            go to state 46
    keywords             go to state 47
    ifstatement          go to state 48
    forstatement         go to state 49
    whilepart            go to state 50
    whilestatement       go to state 51
    dowhilestatement     go to state 52
    lvalue               go to state 53
    expression           go to state 54
    incrdecr             go to state 55
    unaryop              go to state 56
    constant             go to state 57


State 15

   12 functionprototype: functiondeclaration SEMI .

    $default  reduce using rule 12 (functionprototype)


State 16

   13 functiondeclaration: TYPE IDENT LPAR . formallistparameters RPAR
   14                    | TYPE IDENT LPAR . RPAR

    TYPE  shift, and go to state 58
    RPAR  shift, and go to state 59

    formallistparameters  go to state 60
    formalparameter       go to state 61


State 17

   10 declaration: IDENT LBRACKET . INTCONST RBRACKET

    INTCONST  shift, and go to state 62


State 18

    7 variabledeclaration: TYPE listidentifiers SEMI .

    $default  reduce using rule 7 (variabledeclaration)


State 19

    8 listidentifiers: declaration COMMA . listidentifiers

    IDENT  shift, and go to state 63

    listidentifiers  go to state 64
    declaration      go to state 11


State 20

    7 variabledeclaration: TYPE . listidentifiers SEMI

    IDENT  shift, and go to state 63

    listidentifiers  go to state 10
    declaration      go to state 11


State 21

   43 forstatement: FOR . LPAR optionalexpression SEMI optionalexpression SEMI optionalexpression RPAR statementorblock

    LPAR  shift, and go to state 65


State 22

   46 whilepart: WHILE . LPAR expression RPAR

    LPAR  shift, and go to state 66


State 23

   48 dowhilestatement: DO . statementorblock whilepart SEMI

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    statementblock    go to state 67
    statement         go to state 68
    keywords          go to state 47
    ifstatement       go to state 48
    statementorblock  go to state 69
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 24

   39 ifstatement: IF . LPAR expression RPAR statementorblock ELSE statementorblock
   40            | IF . LPAR expression RPAR statementorblock

    LPAR  shift, and go to state 70


State 25

   37 keywords: BREAK .

    $default  reduce using rule 37 (keywords)


State 26

   38 keywords: CONTINUE .

    $default  reduce using rule 38 (keywords)


State 27

   31 statement: RETURN . expression SEMI

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 71
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 28

   49 lvalue: IDENT . optionbrack
   53 expression: IDENT .
   55           | IDENT . LBRACKET expression RBRACKET
   56           | IDENT . LPAR RPAR
   57           | IDENT . LPAR expressionlist RPAR

    LPAR      shift, and go to state 72
    LBRACKET  shift, and go to state 73

    ASSIGN    reduce using rule 51 (optionbrack)
    DECR      reduce using rule 51 (optionbrack)
    INCR      reduce using rule 51 (optionbrack)
    $default  reduce using rule 53 (expression)

    optionbrack  go to state 74


State 29

   88 constant: INTCONST .

    $default  reduce using rule 88 (constant)


State 30

   89 constant: REALCONST .

    $default  reduce using rule 89 (constant)


State 31

   90 constant: STRCONST .

    $default  reduce using rule 90 (constant)


State 32

   91 constant: CHARCONST .

    $default  reduce using rule 91 (constant)


State 33

   26 statementblock: LBRACE . liststatement RBRACE
   27               | LBRACE . RBRACE

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    RBRACE     shift, and go to state 75
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    liststatement     go to state 76
    statement         go to state 77
    keywords          go to state 47
    ifstatement       go to state 48
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 34

   20 functiondefinition: functiondeclaration LBRACE RBRACE .

    $default  reduce using rule 20 (functiondefinition)


State 35

   54 expression: AMP . IDENT

    IDENT  shift, and go to state 78


State 36

   70 unaryop: MINUS .

    $default  reduce using rule 70 (unaryop)


State 37

   71 unaryop: BANG .

    $default  reduce using rule 71 (unaryop)


State 38

   72 unaryop: TILDE .

    $default  reduce using rule 72 (unaryop)


State 39

   69 incrdecr: DECR .

    $default  reduce using rule 69 (incrdecr)


State 40

   68 incrdecr: INCR .

    $default  reduce using rule 68 (incrdecr)


State 41

   64 expression: LPAR . TYPE RPAR expression
   65           | LPAR . expression RPAR

    TYPE       shift, and go to state 79
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 80
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 42

   23 declorstat: variabledeclaration .

    $default  reduce using rule 23 (declorstat)


State 43

   19 functiondefinition: functiondeclaration LBRACE body . RBRACE

    RBRACE  shift, and go to state 81


State 44

   21 body: declorstat . body
   22     | declorstat .

    TYPE       shift, and go to state 20
    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    $default  reduce using rule 22 (body)

    variabledeclaration  go to state 42
    body                 go to state 82
    declorstat           go to state 44
    statementblock       go to state 45
    statement            go to state 46
    keywords             go to state 47
    ifstatement          go to state 48
    forstatement         go to state 49
    whilepart            go to state 50
    whilestatement       go to state 51
    dowhilestatement     go to state 52
    lvalue               go to state 53
    expression           go to state 54
    incrdecr             go to state 55
    unaryop              go to state 56
    constant             go to state 57


State 45

   25 declorstat: statementblock .

    $default  reduce using rule 25 (declorstat)


State 46

   24 declorstat: statement .

    $default  reduce using rule 24 (declorstat)


State 47

   30 statement: keywords . SEMI

    SEMI  shift, and go to state 83


State 48

   33 statement: ifstatement .

    $default  reduce using rule 33 (statement)


State 49

   34 statement: forstatement .

    $default  reduce using rule 34 (statement)


State 50

   47 whilestatement: whilepart . statementorblock SEMI

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    statementblock    go to state 67
    statement         go to state 68
    keywords          go to state 47
    ifstatement       go to state 48
    statementorblock  go to state 84
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 51

   35 statement: whilestatement .

    $default  reduce using rule 35 (statement)


State 52

   36 statement: dowhilestatement .

    $default  reduce using rule 36 (statement)


State 53

   58 expression: lvalue . incrdecr
   60           | lvalue . ASSIGN expression

    ASSIGN  shift, and go to state 85
    DECR    shift, and go to state 39
    INCR    shift, and go to state 40

    incrdecr  go to state 86


State 54

   32 statement: expression . SEMI
   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    SEMI    shift, and go to state 87
    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    binaryop  go to state 104


State 55

   59 expression: incrdecr . lvalue

    IDENT  shift, and go to state 105

    lvalue  go to state 106


State 56

   61 expression: unaryop . expression

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 107
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 57

   52 expression: constant .

    $default  reduce using rule 52 (expression)


State 58

   17 formalparameter: TYPE . IDENT
   18                | TYPE . IDENT LBRACKET RBRACKET

    IDENT  shift, and go to state 108


State 59

   14 functiondeclaration: TYPE IDENT LPAR RPAR .

    $default  reduce using rule 14 (functiondeclaration)


State 60

   13 functiondeclaration: TYPE IDENT LPAR formallistparameters . RPAR

    RPAR  shift, and go to state 109


State 61

   15 formallistparameters: formalparameter . COMMA formallistparameters
   16                     | formalparameter .

    COMMA  shift, and go to state 110

    $default  reduce using rule 16 (formallistparameters)


State 62

   10 declaration: IDENT LBRACKET INTCONST . RBRACKET

    RBRACKET  shift, and go to state 111


State 63

   10 declaration: IDENT . LBRACKET INTCONST RBRACKET
   11            | IDENT .

    LBRACKET  shift, and go to state 17

    $default  reduce using rule 11 (declaration)


State 64

    8 listidentifiers: declaration COMMA listidentifiers .

    $default  reduce using rule 8 (listidentifiers)


State 65

   43 forstatement: FOR LPAR . optionalexpression SEMI optionalexpression SEMI optionalexpression RPAR statementorblock

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    $default  reduce using rule 45 (optionalexpression)

    optionalexpression  go to state 112
    lvalue              go to state 53
    expression          go to state 113
    incrdecr            go to state 55
    unaryop             go to state 56
    constant            go to state 57


State 66

   46 whilepart: WHILE LPAR . expression RPAR

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 114
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 67

   42 statementorblock: statementblock .

    $default  reduce using rule 42 (statementorblock)


State 68

   41 statementorblock: statement .

    $default  reduce using rule 41 (statementorblock)


State 69

   48 dowhilestatement: DO statementorblock . whilepart SEMI

    WHILE  shift, and go to state 22

    whilepart  go to state 115


State 70

   39 ifstatement: IF LPAR . expression RPAR statementorblock ELSE statementorblock
   40            | IF LPAR . expression RPAR statementorblock

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 116
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 71

   31 statement: RETURN expression . SEMI
   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    SEMI    shift, and go to state 117
    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    binaryop  go to state 104


State 72

   56 expression: IDENT LPAR . RPAR
   57           | IDENT LPAR . expressionlist RPAR

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41
    RPAR       shift, and go to state 118

    lvalue          go to state 53
    expression      go to state 119
    expressionlist  go to state 120
    incrdecr        go to state 55
    unaryop         go to state 56
    constant        go to state 57


State 73

   50 optionbrack: LBRACKET . expression RBRACKET
   55 expression: IDENT LBRACKET . expression RBRACKET

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 121
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 74

   49 lvalue: IDENT optionbrack .

    $default  reduce using rule 49 (lvalue)


State 75

   27 statementblock: LBRACE RBRACE .

    $default  reduce using rule 27 (statementblock)


State 76

   26 statementblock: LBRACE liststatement . RBRACE

    RBRACE  shift, and go to state 122


State 77

   28 liststatement: statement . liststatement
   29              | statement .

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    $default  reduce using rule 29 (liststatement)

    liststatement     go to state 123
    statement         go to state 77
    keywords          go to state 47
    ifstatement       go to state 48
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 78

   54 expression: AMP IDENT .

    $default  reduce using rule 54 (expression)


State 79

   64 expression: LPAR TYPE . RPAR expression

    RPAR  shift, and go to state 124


State 80

   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression
   65           | LPAR expression . RPAR

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103
    RPAR    shift, and go to state 125

    binaryop  go to state 104


State 81

   19 functiondefinition: functiondeclaration LBRACE body RBRACE .

    $default  reduce using rule 19 (functiondefinition)


State 82

   21 body: declorstat body .

    $default  reduce using rule 21 (body)


State 83

   30 statement: keywords SEMI .

    $default  reduce using rule 30 (statement)


State 84

   47 whilestatement: whilepart statementorblock . SEMI

    SEMI  shift, and go to state 126


State 85

   60 expression: lvalue ASSIGN . expression

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 127
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 86

   58 expression: lvalue incrdecr .

    $default  reduce using rule 58 (expression)


State 87

   32 statement: expression SEMI .

    $default  reduce using rule 32 (statement)


State 88

   63 expression: expression QUEST . expression COLON expression

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 128
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 89

   86 binaryop: DPIPE .

    $default  reduce using rule 86 (binaryop)


State 90

   87 binaryop: DAMP .

    $default  reduce using rule 87 (binaryop)


State 91

   84 binaryop: PIPE .

    $default  reduce using rule 84 (binaryop)


State 92

   85 binaryop: AMP .

    $default  reduce using rule 85 (binaryop)


State 93

   73 binaryop: EQUALS .

    $default  reduce using rule 73 (binaryop)


State 94

   74 binaryop: NEQUAL .

    $default  reduce using rule 74 (binaryop)


State 95

   76 binaryop: GT .

    $default  reduce using rule 76 (binaryop)


State 96

   75 binaryop: GE .

    $default  reduce using rule 75 (binaryop)


State 97

   78 binaryop: LT .

    $default  reduce using rule 78 (binaryop)


State 98

   77 binaryop: LE .

    $default  reduce using rule 77 (binaryop)


State 99

   79 binaryop: PLUS .

    $default  reduce using rule 79 (binaryop)


State 100

   80 binaryop: MINUS .

    $default  reduce using rule 80 (binaryop)


State 101

   81 binaryop: STAR .

    $default  reduce using rule 81 (binaryop)


State 102

   82 binaryop: SLASH .

    $default  reduce using rule 82 (binaryop)


State 103

   83 binaryop: MOD .

    $default  reduce using rule 83 (binaryop)


State 104

   62 expression: expression binaryop . expression

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 129
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 105

   49 lvalue: IDENT . optionbrack

    LBRACKET  shift, and go to state 130

    $default  reduce using rule 51 (optionbrack)

    optionbrack  go to state 74


State 106

   59 expression: incrdecr lvalue .

    $default  reduce using rule 59 (expression)


State 107

   61 expression: unaryop expression .
   62           | expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    QUEST     [reduce using rule 61 (expression)]
    DPIPE     [reduce using rule 61 (expression)]
    DAMP      [reduce using rule 61 (expression)]
    PIPE      [reduce using rule 61 (expression)]
    AMP       [reduce using rule 61 (expression)]
    EQUALS    [reduce using rule 61 (expression)]
    NEQUAL    [reduce using rule 61 (expression)]
    GT        [reduce using rule 61 (expression)]
    GE        [reduce using rule 61 (expression)]
    LT        [reduce using rule 61 (expression)]
    LE        [reduce using rule 61 (expression)]
    PLUS      [reduce using rule 61 (expression)]
    MINUS     [reduce using rule 61 (expression)]
    STAR      [reduce using rule 61 (expression)]
    SLASH     [reduce using rule 61 (expression)]
    MOD       [reduce using rule 61 (expression)]
    $default  reduce using rule 61 (expression)

    binaryop  go to state 104


State 108

   17 formalparameter: TYPE IDENT .
   18                | TYPE IDENT . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 131

    $default  reduce using rule 17 (formalparameter)


State 109

   13 functiondeclaration: TYPE IDENT LPAR formallistparameters RPAR .

    $default  reduce using rule 13 (functiondeclaration)


State 110

   15 formallistparameters: formalparameter COMMA . formallistparameters

    TYPE  shift, and go to state 58

    formallistparameters  go to state 132
    formalparameter       go to state 61


State 111

   10 declaration: IDENT LBRACKET INTCONST RBRACKET .

    $default  reduce using rule 10 (declaration)


State 112

   43 forstatement: FOR LPAR optionalexpression . SEMI optionalexpression SEMI optionalexpression RPAR statementorblock

    SEMI  shift, and go to state 133


State 113

   44 optionalexpression: expression .
   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    $default  reduce using rule 44 (optionalexpression)

    binaryop  go to state 104


State 114

   46 whilepart: WHILE LPAR expression . RPAR
   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103
    RPAR    shift, and go to state 134

    binaryop  go to state 104


State 115

   48 dowhilestatement: DO statementorblock whilepart . SEMI

    SEMI  shift, and go to state 135


State 116

   39 ifstatement: IF LPAR expression . RPAR statementorblock ELSE statementorblock
   40            | IF LPAR expression . RPAR statementorblock
   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103
    RPAR    shift, and go to state 136

    binaryop  go to state 104


State 117

   31 statement: RETURN expression SEMI .

    $default  reduce using rule 31 (statement)


State 118

   56 expression: IDENT LPAR RPAR .

    $default  reduce using rule 56 (expression)


State 119

   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression
   66 expressionlist: expression . COMMA expressionlist
   67               | expression .

    QUEST   shift, and go to state 88
    COMMA   shift, and go to state 137
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    $default  reduce using rule 67 (expressionlist)

    binaryop  go to state 104


State 120

   57 expression: IDENT LPAR expressionlist . RPAR

    RPAR  shift, and go to state 138


State 121

   50 optionbrack: LBRACKET expression . RBRACKET
   55 expression: IDENT LBRACKET expression . RBRACKET
   62           | expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST     shift, and go to state 88
    DPIPE     shift, and go to state 89
    DAMP      shift, and go to state 90
    PIPE      shift, and go to state 91
    AMP       shift, and go to state 92
    EQUALS    shift, and go to state 93
    NEQUAL    shift, and go to state 94
    GT        shift, and go to state 95
    GE        shift, and go to state 96
    LT        shift, and go to state 97
    LE        shift, and go to state 98
    PLUS      shift, and go to state 99
    MINUS     shift, and go to state 100
    STAR      shift, and go to state 101
    SLASH     shift, and go to state 102
    MOD       shift, and go to state 103
    RBRACKET  shift, and go to state 139

    binaryop  go to state 104


State 122

   26 statementblock: LBRACE liststatement RBRACE .

    $default  reduce using rule 26 (statementblock)


State 123

   28 liststatement: statement liststatement .

    $default  reduce using rule 28 (liststatement)


State 124

   64 expression: LPAR TYPE RPAR . expression

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 140
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 125

   65 expression: LPAR expression RPAR .

    $default  reduce using rule 65 (expression)


State 126

   47 whilestatement: whilepart statementorblock SEMI .

    $default  reduce using rule 47 (whilestatement)


State 127

   60 expression: lvalue ASSIGN expression .
   62           | expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    QUEST     [reduce using rule 60 (expression)]
    $default  reduce using rule 60 (expression)

    binaryop  go to state 104


State 128

   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression
   63           | expression QUEST expression . COLON expression

    QUEST   shift, and go to state 88
    COLON   shift, and go to state 141
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    binaryop  go to state 104


State 129

   62 expression: expression . binaryop expression
   62           | expression binaryop expression .
   63           | expression . QUEST expression COLON expression

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    QUEST     [reduce using rule 62 (expression)]
    DPIPE     [reduce using rule 62 (expression)]
    DAMP      [reduce using rule 62 (expression)]
    PIPE      [reduce using rule 62 (expression)]
    AMP       [reduce using rule 62 (expression)]
    EQUALS    [reduce using rule 62 (expression)]
    NEQUAL    [reduce using rule 62 (expression)]
    GT        [reduce using rule 62 (expression)]
    GE        [reduce using rule 62 (expression)]
    LT        [reduce using rule 62 (expression)]
    LE        [reduce using rule 62 (expression)]
    PLUS      [reduce using rule 62 (expression)]
    MINUS     [reduce using rule 62 (expression)]
    STAR      [reduce using rule 62 (expression)]
    SLASH     [reduce using rule 62 (expression)]
    MOD       [reduce using rule 62 (expression)]
    $default  reduce using rule 62 (expression)

    binaryop  go to state 104


State 130

   50 optionbrack: LBRACKET . expression RBRACKET

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 142
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 131

   18 formalparameter: TYPE IDENT LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 143


State 132

   15 formallistparameters: formalparameter COMMA formallistparameters .

    $default  reduce using rule 15 (formallistparameters)


State 133

   43 forstatement: FOR LPAR optionalexpression SEMI . optionalexpression SEMI optionalexpression RPAR statementorblock

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    $default  reduce using rule 45 (optionalexpression)

    optionalexpression  go to state 144
    lvalue              go to state 53
    expression          go to state 113
    incrdecr            go to state 55
    unaryop             go to state 56
    constant            go to state 57


State 134

   46 whilepart: WHILE LPAR expression RPAR .

    $default  reduce using rule 46 (whilepart)


State 135

   48 dowhilestatement: DO statementorblock whilepart SEMI .

    $default  reduce using rule 48 (dowhilestatement)


State 136

   39 ifstatement: IF LPAR expression RPAR . statementorblock ELSE statementorblock
   40            | IF LPAR expression RPAR . statementorblock

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    statementblock    go to state 67
    statement         go to state 68
    keywords          go to state 47
    ifstatement       go to state 48
    statementorblock  go to state 145
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 137

   66 expressionlist: expression COMMA . expressionlist

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue          go to state 53
    expression      go to state 119
    expressionlist  go to state 146
    incrdecr        go to state 55
    unaryop         go to state 56
    constant        go to state 57


State 138

   57 expression: IDENT LPAR expressionlist RPAR .

    $default  reduce using rule 57 (expression)


State 139

   50 optionbrack: LBRACKET expression RBRACKET .
   55 expression: IDENT LBRACKET expression RBRACKET .

    ASSIGN    reduce using rule 50 (optionbrack)
    DECR      reduce using rule 50 (optionbrack)
    INCR      reduce using rule 50 (optionbrack)
    $default  reduce using rule 55 (expression)


State 140

   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression
   64           | LPAR TYPE RPAR expression .

    QUEST  shift, and go to state 88

    QUEST     [reduce using rule 64 (expression)]
    $default  reduce using rule 64 (expression)

    binaryop  go to state 104


State 141

   63 expression: expression QUEST expression COLON . expression

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    lvalue      go to state 53
    expression  go to state 147
    incrdecr    go to state 55
    unaryop     go to state 56
    constant    go to state 57


State 142

   50 optionbrack: LBRACKET expression . RBRACKET
   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression

    QUEST     shift, and go to state 88
    DPIPE     shift, and go to state 89
    DAMP      shift, and go to state 90
    PIPE      shift, and go to state 91
    AMP       shift, and go to state 92
    EQUALS    shift, and go to state 93
    NEQUAL    shift, and go to state 94
    GT        shift, and go to state 95
    GE        shift, and go to state 96
    LT        shift, and go to state 97
    LE        shift, and go to state 98
    PLUS      shift, and go to state 99
    MINUS     shift, and go to state 100
    STAR      shift, and go to state 101
    SLASH     shift, and go to state 102
    MOD       shift, and go to state 103
    RBRACKET  shift, and go to state 148

    binaryop  go to state 104


State 143

   18 formalparameter: TYPE IDENT LBRACKET RBRACKET .

    $default  reduce using rule 18 (formalparameter)


State 144

   43 forstatement: FOR LPAR optionalexpression SEMI optionalexpression . SEMI optionalexpression RPAR statementorblock

    SEMI  shift, and go to state 149


State 145

   39 ifstatement: IF LPAR expression RPAR statementorblock . ELSE statementorblock
   40            | IF LPAR expression RPAR statementorblock .

    ELSE  shift, and go to state 150

    $default  reduce using rule 40 (ifstatement)


State 146

   66 expressionlist: expression COMMA expressionlist .

    $default  reduce using rule 66 (expressionlist)


State 147

   62 expression: expression . binaryop expression
   63           | expression . QUEST expression COLON expression
   63           | expression QUEST expression COLON expression .

    QUEST   shift, and go to state 88
    DPIPE   shift, and go to state 89
    DAMP    shift, and go to state 90
    PIPE    shift, and go to state 91
    AMP     shift, and go to state 92
    EQUALS  shift, and go to state 93
    NEQUAL  shift, and go to state 94
    GT      shift, and go to state 95
    GE      shift, and go to state 96
    LT      shift, and go to state 97
    LE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    SLASH   shift, and go to state 102
    MOD     shift, and go to state 103

    QUEST     [reduce using rule 63 (expression)]
    $default  reduce using rule 63 (expression)

    binaryop  go to state 104


State 148

   50 optionbrack: LBRACKET expression RBRACKET .

    $default  reduce using rule 50 (optionbrack)


State 149

   43 forstatement: FOR LPAR optionalexpression SEMI optionalexpression SEMI . optionalexpression RPAR statementorblock

    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    $default  reduce using rule 45 (optionalexpression)

    optionalexpression  go to state 151
    lvalue              go to state 53
    expression          go to state 113
    incrdecr            go to state 55
    unaryop             go to state 56
    constant            go to state 57


State 150

   39 ifstatement: IF LPAR expression RPAR statementorblock ELSE . statementorblock

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    statementblock    go to state 67
    statement         go to state 68
    keywords          go to state 47
    ifstatement       go to state 48
    statementorblock  go to state 152
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 151

   43 forstatement: FOR LPAR optionalexpression SEMI optionalexpression SEMI optionalexpression . RPAR statementorblock

    RPAR  shift, and go to state 153


State 152

   39 ifstatement: IF LPAR expression RPAR statementorblock ELSE statementorblock .

    $default  reduce using rule 39 (ifstatement)


State 153

   43 forstatement: FOR LPAR optionalexpression SEMI optionalexpression SEMI optionalexpression RPAR . statementorblock

    FOR        shift, and go to state 21
    WHILE      shift, and go to state 22
    DO         shift, and go to state 23
    IF         shift, and go to state 24
    BREAK      shift, and go to state 25
    CONTINUE   shift, and go to state 26
    RETURN     shift, and go to state 27
    IDENT      shift, and go to state 28
    INTCONST   shift, and go to state 29
    REALCONST  shift, and go to state 30
    STRCONST   shift, and go to state 31
    CHARCONST  shift, and go to state 32
    LBRACE     shift, and go to state 33
    AMP        shift, and go to state 35
    MINUS      shift, and go to state 36
    BANG       shift, and go to state 37
    TILDE      shift, and go to state 38
    DECR       shift, and go to state 39
    INCR       shift, and go to state 40
    LPAR       shift, and go to state 41

    statementblock    go to state 67
    statement         go to state 68
    keywords          go to state 47
    ifstatement       go to state 48
    statementorblock  go to state 154
    forstatement      go to state 49
    whilepart         go to state 50
    whilestatement    go to state 51
    dowhilestatement  go to state 52
    lvalue            go to state 53
    expression        go to state 54
    incrdecr          go to state 55
    unaryop           go to state 56
    constant          go to state 57


State 154

   43 forstatement: FOR LPAR optionalexpression SEMI optionalexpression SEMI optionalexpression RPAR statementorblock .

    $default  reduce using rule 43 (forstatement)

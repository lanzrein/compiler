PROGRAM = SEQUENCE | $
SEQUENCE = VARDECL, FUNCPROTO, FUNCDEF
VARDECL = TYPE LISTIDENT SEMICOLON
LISTIDENT = DECL COMMA LISTIDENT
DECL = IDENT | IDENT LPAR INTCONST RPAR
FUNCPROTO = FUNCDECL SEMICOLON
FUNCDECL = TYPE IDENT LPAR FORMALPARALIST RPAR
FORMALPARALIST = FORMALPARAM COMMA FORMALPARALIST | FORMALPARALIST $ 
FORMALPARAM = TYPE IDENT | TYPE IDENT RBRACKET LBRACKET
FUNCTIONDEF = FUNCDECL LBRACE LISTDECL LISTSTATEMENT RBRACE
LISTDECL = DECL LISTDECL | LISTDECL $ 
LISTSTATEMENT = STATEMENT LISTSTATEMENT | LISTSTATEMENT $
STATEMENTBLOCK = LBRACE LISTSTATEMENT RBRACE
STATEMENT = $ SEMICOLON | EXPRESSION SEMICOLON | BREAK SEMICOLON | CONTINUE SEMICOLON 
			| RETURN SEMICOLON | RETURN EXPRESSION SEMICOLON | IFSTATEMENT | FORSTATEMENT
			| WHILESTATEMENT
			
IFSTATEMENT = IF LPAR EXPR RPAR STATETEMENTORBLOCK
STATETEMENTORBLOCK = STATEMENT SEMICOLON | STATEMENTBLOCK
FORSTATEMENT = FOR LPAR (EXPR) SEMICOLON (EXPR) SEMICOLON (EXPR) RPAR STATETEMENTORBLOCK
WHILEPART = WHILE LPAR EXPRESSION RPAR
WHILESTATEMENT = WHILEPART STATETEMENTORBLOCK
DOWHILESTATEMENT = DO STATETEMENTORBLOCK WHILEPART

EXPRESSION = INTCONST | REALCONST | IDENT | IDENT AMPERSAND | IDENTEXPR | LVALUEEXPR
EXPRESSIONLIST = EXPRESSSION COMMA EXPRESSIONLIST 

IDENTEXPR = IDENT | IDENT AMPERSAND | IDENT LPAR EXPRESSIONLIST RPAR
LVALUEEXPR = LVALUE ASSIGN EXPRESSION | INCR LVALUE | LVALUE INCR | LVALUE DECR | DECR LVALUE
UNARYEXPR = UNARYOP EXPR | EXPR BINARYOP EXPR | EXPR QUEST EXPR COLON EXPR
PARENTHESISEXPR = LPAR TYPE RPAR EXPRESSION | LPAR EXPRESSION RPAR
LVALUE = IDENT | IDENT LPAR EXPRESSION RPAR
UNARYOP = MINUS | BANG | TILDE
BINARYOP = EQUALS | NOTEQ | GT | GE | LT | LE | PLUS | MINUS 
			| STAR | SLASH | PERCENT | PIPE | AMPERSAND |DPIPE | DAMPERSAND